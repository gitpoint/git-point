export const eo = {
  auth: {
    login: {
      connectingToGitHub: 'Konektante al GitHub...',
      preparingGitPoint: 'Prepari GitPoint...',
      cancel: 'CANCELO',
      welcomeTitle: 'Bonvenon al GitPoint',
      welcomeMessage: 'La plej karakterizaĵo riĉa GitHub-kliento, kiu estas 100% libera',
      notificationsTitle: 'Kontroli sciigojn',
      notificationsMessage:
        'Vidi kaj kontroli ĉiujn viajn nelegitajn kaj partoprenajn sciigojn',
      reposTitle: 'Repositorioj kaj Uzantoj',
      reposMessage:
        'Facile akiri dosierujon, uzantojn kaj organizajn informojn',
      issuesTitle: 'Problemoj kaj Petitaj Petoj',
      issuesMessage:
        'Komuniki sur konversacioj, kunfandi tiri petojn kaj pli',
      signInButton: 'ENSALUTI',
    },
    welcome: {
      welcomeTitle: 'Bonvenon al GitPoint',
    },
    events: {
      welcomeMessage:
        "Bonvenon! Ĉi tio estas via novaĵ-manĝaĵo - ĝi helpos vin resti kun freŝa agado en repositorioj, kiujn vi rigardas kaj homoj, kiujn vi sekvas.",
      commitCommentEvent: 'komentis fari',
      createEvent: 'kreita {{object}}',
      deleteEvent: 'forigita {{object}}',
      issueCommentEvent: '{{action}} sur {{type}}',
      issueEditedEvent: '{{action}} ilian komenton {{type}}',
      issueRemovedEvent: '{{action}} ilian komenton {{type}}',
      issuesEvent: '{{action}} afero',
      publicEvent: {
        action: 'farita',
        connector: 'publika',
      },
      pullRequestEvent: '{{action}} tiri peton',
      pullRequestReviewEvent: '{{action}} tiri peto revizio',
      pullRequestReviewCommentEvent: '{{action}} en tiri peto',
      pullRequestReviewEditedEvent: '{{action}} ilia komento pri tiri peto',
      pullRequestReviewDeletedEvent: '{{action}} ilia komento pri tiri peto',
      releaseEvent: '{{action}} liberigo',
      atConnector: 'ĉe',
      toConnector: 'ĉe',
      types: {
        pullRequest: 'tiri peton',
        issue: 'afero',
      },
      objects: {
        repository: 'repositorio',
        branch: 'branĉo',
        tag: 'etikedo',
      },
      actions: {
        added: 'aldonita',
        created: 'kreita',
        edited: 'redaktita',
        deleted: 'forigita',
        assigned: 'atribuita',
        unassigned: 'neignigita',
        labeled: 'etikedita',
        unlabeled: 'neblasita',
        opened: 'malfermita',
        milestoned: 'mejloŝtonoj',
        demilestoned: 'demilestita',
        closed: 'fermita',
        reopened: 'remalfermita',
        review_requested: 'recenzo petita',
        review_request_removed: 'recenzo petita forigita',
        submitted: 'sendita',
        dismissed: 'eksigita',
        published: 'publikigita',
        publicized: 'publikigita', , , , , , , 
        privatized: 'privatigita',
        starred: 'frakasita',
        pushedTo: 'puŝita al',
        forked: 'forkis',
        commented: 'komentis',
        removed: 'forigita',
      },
    },
    profile: {
      orgsRequestApprovalTop: "Ĉu vi ne povas vidi ĉiujn viajn organizojn?",
      orgsRequestApprovalBottom: 'Vi eble devas peti aprobon por ili.',
      codePushCheck: 'Kontrolu por ĝisdatigo',
      codePushChecking: 'Kontroli por ĝisdatigo...',
      codePushUpdated: 'La apliko estas ĝisdata',
      codePushAvailable: 'Ĝisdatigo estas havebla!',
      codePushNotApplicable: 'Not applicable in analizo mod',
    },
    userOptions: {
      donate: 'Faru donacon',
      title: 'Opcioj',
      language: 'Lingvo',
      privacyPolicy: 'Privateca Politiko',
      signOut: 'Elsaluti',
    },
    privacyPolicy: {
      title: 'Privateca Politiko',
      effectiveDate: 'Lasta ĝisdatigita: July 15, 2017',
      introduction:
        "Ni ĝojas, ke vi decidis uzi GitPoint. Ĉi tiu Privateca Politiko estas ĉi tie por informi vin pri tio, kion ni faros - kaj ne fari - kun la datumoj de nia uzanto.",
      userDataTitle: 'UZANTO-DATUMOJ',
      userData1:
        "Ni nenion faras kun via GitHub-informo. Post aŭtentikigado, la uzanto OAuth token estas persistita rekte sur ilia aparato-stokado. Ne eblas rekuperi tiun informon. Ni neniam vidos aliron al la uzanto token nek stokas ĝin.",
      userData2:
        "Ĉi tio signifas, ke en neniu maniero, formo aŭ formo ni iam ajn vidos, uzas aŭ dividas datumojn de GitHub de uzanto. Se privataj datumoj iam ajn videblas en iu ajn punkto, ni ne registros aŭ vidos ĝin. Se ĝi hazarde registriĝas, ni forigos ĝin tuj uzante sekurajn viŝajn metodojn. Denove, ni starigis aŭtentike specife por ke ĉi tio neniam okazas.",
      analyticsInfoTitle: 'ANALIKA INFORMO',
      analyticsInfo1:
        'Ni nuntempe uzas Google Analytics kaj iTunes App Analytics por helpi nin mezuri trafikojn kaj uzadajn tendencojn por la GitPoint. Ĉi tiuj iloj kolektas informojn senditajn de via aparato, inkluzive de mekanismo kaj platforma versio, regiono kaj referinto. Ĉi tiu informo ne povas esti prudente uzata por identigi ajnan individuan uzanton kaj neniun personan informon ĉerpas.',
      analyticsInfo2:
        "Se ni pasos por inkludi alian trian platformon por kolekti stakajn spurojn, erarojn-registrojn aŭ pli da analizaj informoj, ni certiĝos, ke uzantoj de datumoj restas senvaloraj kaj ĉifritaj.",
      openSourceTitle: 'MALFERMA FONTO',
      openSource1:
        'GitPoint estas malferma fonto kaj la historio de kontribuoj al la platformo ĉiam estos videbla al la publiko.',
      openSource2:
        'Kun ĉiu kontribuo al la programo, la revizio de kodo ĉiam fariĝas por malhelpi iun ajn el inkludi malican kodon de ia speco.',
      contactTitle: 'KONTAKTU',
      contact1:
        'Dankon pro legado de nia Privateca Politiko. Ni esperas, ke vi ĝuas uzi GitPoint tiom, kiom ni ĝuis konstrui ĝin.',
      contact2:
        'Se vi havas demandojn pri ĉi tiu Privateca Politiko aŭ GitPoint ĝenerale, bonvolu enmeti aferon en la',
      contactLink: 'GitPoint repository',
    },
  },
  notifications: {
    main: {
      unread: 'unread',
      participating: 'participating',
      all: 'all',
      unreadButton: 'Unread',
      participatingButton: 'Participating',
      allButton: 'All',
      retrievingMessage: 'Retrieving notifications',
      noneMessage: "You don't have any notifications of this type",
      markAllAsRead: 'Mark all as read',
    },
  },
  search: {
    main: {
      repositoryButton: 'Repositories',
      userButton: 'Users',
      searchingMessage: 'Searching for {{query}}',
      searchMessage: 'Search for any {{type}}',
      repository: 'repository',
      user: 'user',
      noUsersFound: 'No users found :(',
      noRepositoriesFound: 'No repositories found :(',
    },
  },
  user: {
    profile: {
      userActions: 'User Actions',
      unfollow: 'Unfollow',
      follow: 'Follow',
    },
    repositoryList: {
      title: 'Repositories',
    },
    followers: {
      title: 'Followers',
      text: 'Followers',
      followsYou: 'Follows you',
    },
    following: {
      title: 'Following',
      text: 'Following',
      followingYou: 'Following',
    },
  },
  repository: {
    main: {
      shareRepositoryTitle: 'Share {{repoName}}',
      shareRepositoryMessage: 'Check out {{repoName}} on GitHub. {{repoUrl}}',
      repoActions: 'Repository Actions',
      forkAction: 'Fork',
      starAction: 'Star',
      unstarAction: 'Unstar',
      shareAction: 'Share',
      unwatchAction: 'Unwatch',
      watchAction: 'Watch',
      ownerTitle: 'OWNER',
      contributorsTitle: 'CONTRIBUTORS',
      noContributorsMessage: 'No contributors found',
      sourceTitle: 'SOURCE',
      readMe: 'README',
      viewSource: 'View Code',
      issuesTitle: 'ISSUES',
      noIssuesMessage: 'No issues',
      noOpenIssuesMessage: 'No open issues',
      viewAllButton: 'View All',
      newIssueButton: 'New Issue',
      pullRequestTitle: 'PULL REQUESTS',
      noPullRequestsMessage: 'No pull requests',
      noOpenPullRequestsMessage: 'No open pull requests',
      starsTitle: 'Stars',
      forksTitle: 'Forks',
      forkedFromMessage: 'forked from',
      starred: 'Starred',
      watching: 'Watching',
      watchers: 'Watchers',
    },
    codeList: {
      title: 'Code',
    },
    issueList: {
      title: 'Issues',
      openButton: 'Open',
      closedButton: 'Closed',
      searchingMessage: 'Searching for {{query}}',
      noOpenIssues: 'No open issues found!',
      noClosedIssues: 'No closed issues found!',
    },
    pullList: {
      title: 'Pull Requests',
      openButton: 'Open',
      closedButton: 'Closed',
      searchingMessage: 'Searching for {{query}}',
      noOpenPulls: 'No open pull requests found!',
      noClosedPulls: 'No closed pull requests found!',
    },
    pullDiff: {
      title: 'Diff',
      numFilesChanged: '{{numFilesChanged}} files',
      new: 'NEW',
      deleted: 'DELETED',
      fileRenamed: 'File renamed without any changes',
    },
  },
  organization: {
    main: {
      membersTitle: 'MEMBERS',
      descriptionTitle: 'DESCRIPTION',
    },
  },
  issue: {
    settings: {
      title: 'Settings',
      pullRequestType: 'Pull Request',
      issueType: 'Issue',
      applyLabelButton: 'Apply Label',
      noneMessage: 'None yet',
      labelsTitle: 'LABELS',
      assignYourselfButton: 'Assign Yourself',
      assigneesTitle: 'ASSIGNEES',
      actionsTitle: 'ACTIONS',
      unlockIssue: 'Unlock {{issueType}}',
      lockIssue: 'Lock {{issueType}}',
      closeIssue: 'Close {{issueType}}',
      reopenIssue: 'Reopen {{issueType}}',
      areYouSurePrompt: 'Are you sure?',
      applyLabelTitle: 'Apply a label to this issue',
    },
    comment: {
      commentActions: 'Comment Actions',
      editCommentTitle: 'Edit Comment',
      editAction: 'Edit',
      deleteAction: 'Delete',
    },
    main: {
      assignees: 'Assignees',
      mergeButton: 'Merge Pull Request',
      noDescription: 'No description provided.',
      lockedCommentInput: 'Locked, but you can still comment...',
      commentInput: 'Add a comment...',
      lockedIssue: 'Issue is locked',
      states: {
        open: 'Open',
        closed: 'Closed',
        merged: 'Merged',
      },
      screenTitles: {
        issue: 'Issue',
        pullRequest: 'Pull Request',
      },
      openIssueSubTitle: '#{{number}} opened {{time}} ago by {{user}}',
      closedIssueSubTitle: '#{{number}} by {{user}} was closed {{time}} ago',
    },
    newIssue: {
      title: 'New Issue',
      missingTitleAlert: 'You need to have an issue title!',
      issueTitle: 'Issue Title',
      writeATitle: 'Write a title for your issue here',
      issueComment: 'Issue Comment',
      writeAComment: 'Write a comment for your issue here',
    },
    pullMerge: {
      title: 'Merge Pull Request',
      createMergeCommit: 'Create a merge commit',
      squashAndMerge: 'Squash and merge',
      merge: 'merge',
      squash: 'squash',
      missingTitleAlert: 'You need to have a commit title!',
      commitTitle: 'Commit Title',
      writeATitle: 'Write a title for your commit here',
      commitMessage: 'Commit Message',
      writeAMessage: 'Write a message for your commit here',
      mergeType: 'Merge Type',
      changeMergeType: 'Change Merge Type',
    },
  },
  common: {
    bio: 'BIO',
    stars: 'Stars',
    orgs: 'ORGANIZATIONS',
    noOrgsMessage: 'No organizations',
    info: 'INFO',
    company: 'Company',
    location: 'Location',
    email: 'Email',
    website: 'Website',
    repositories: 'Repositories',
    cancel: 'Cancel',
    yes: 'Yes',
    ok: 'OK',
    submit: 'Submit',
    relativeTime: {
      past: '%s',
      s: '%ds',
      m: '%dm',
      mm: '%dm',
      h: '%dh',
      hh: '%dh',
      d: '%dd',
      dd: '%dd',
      M: '%dmo',
      MM: '%dmo',
      y: '%dy',
      yy: '%dy',
    },
    abbreviations: {
      thousand: 'k',
    },
  },
};
